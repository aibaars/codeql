// generated by codegen
/**
 * This module provides the generated definition of `Loop`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.generated.Synth
private import codeql.rust.generated.Raw
import codeql.rust.elements.Expr

/**
 * INTERNAL: This module contains the fully generated definition of `Loop` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::Loop` class directly.
   * Use the subclass `Loop`, where the following predicates are available.
   */
  class Loop extends Synth::TLoop, Expr {
    override string getAPrimaryQlClass() { result = "Loop" }

    /**
     * Gets the body of this loop.
     */
    Expr getBody() {
      result = Synth::convertExprFromRaw(Synth::convertLoopToRaw(this).(Raw::Loop).getBody())
    }

    /**
     * Gets the label of this loop, if it exists.
     */
    string getLabel() { result = Synth::convertLoopToRaw(this).(Raw::Loop).getLabel() }

    /**
     * Holds if `getLabel()` exists.
     */
    final predicate hasLabel() { exists(this.getLabel()) }
  }
}
