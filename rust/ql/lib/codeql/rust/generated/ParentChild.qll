// generated by codegen
/**
 * This module provides the generated parent/child relationship.
 */

import codeql.rust.elements

private module Impl {
  private Element getImmediateChildOfElement(Element e, int index, string partialPredicateCall) {
    none()
  }

  private Element getImmediateChildOfFile(File e, int index, string partialPredicateCall) {
    exists(int b, int bElement, int n |
      b = 0 and
      bElement = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfElement(e, i, _)) | i) and
      n = bElement and
      (
        none()
        or
        result = getImmediateChildOfElement(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfLocatable(Locatable e, int index, string partialPredicateCall) {
    exists(int b, int bElement, int n |
      b = 0 and
      bElement = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfElement(e, i, _)) | i) and
      n = bElement and
      (
        none()
        or
        result = getImmediateChildOfElement(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfLocation(Location e, int index, string partialPredicateCall) {
    exists(int b, int bElement, int n |
      b = 0 and
      bElement = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfElement(e, i, _)) | i) and
      n = bElement and
      (
        none()
        or
        result = getImmediateChildOfElement(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfDbFile(DbFile e, int index, string partialPredicateCall) {
    exists(int b, int bFile, int n |
      b = 0 and
      bFile = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfFile(e, i, _)) | i) and
      n = bFile and
      (
        none()
        or
        result = getImmediateChildOfFile(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfDbLocation(DbLocation e, int index, string partialPredicateCall) {
    exists(int b, int bLocation, int n |
      b = 0 and
      bLocation = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfLocation(e, i, _)) | i) and
      n = bLocation and
      (
        none()
        or
        result = getImmediateChildOfLocation(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfDeclaration(
    Declaration e, int index, string partialPredicateCall
  ) {
    exists(int b, int bLocatable, int n |
      b = 0 and
      bLocatable = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfLocatable(e, i, _)) | i) and
      n = bLocatable and
      (
        none()
        or
        result = getImmediateChildOfLocatable(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfExpr(Expr e, int index, string partialPredicateCall) {
    exists(int b, int bLocatable, int n |
      b = 0 and
      bLocatable = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfLocatable(e, i, _)) | i) and
      n = bLocatable and
      (
        none()
        or
        result = getImmediateChildOfLocatable(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfMatchArm(MatchArm e, int index, string partialPredicateCall) {
    exists(int b, int bLocatable, int n |
      b = 0 and
      bLocatable = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfLocatable(e, i, _)) | i) and
      n = bLocatable and
      (
        none()
        or
        result = getImmediateChildOfLocatable(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfPat(Pat e, int index, string partialPredicateCall) {
    exists(int b, int bLocatable, int n |
      b = 0 and
      bLocatable = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfLocatable(e, i, _)) | i) and
      n = bLocatable and
      (
        none()
        or
        result = getImmediateChildOfLocatable(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfStmt(Stmt e, int index, string partialPredicateCall) {
    exists(int b, int bLocatable, int n |
      b = 0 and
      bLocatable = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfLocatable(e, i, _)) | i) and
      n = bLocatable and
      (
        none()
        or
        result = getImmediateChildOfLocatable(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfTypeRef(TypeRef e, int index, string partialPredicateCall) {
    exists(int b, int bLocatable, int n |
      b = 0 and
      bLocatable = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfLocatable(e, i, _)) | i) and
      n = bLocatable and
      (
        none()
        or
        result = getImmediateChildOfLocatable(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfUnknownFile(
    UnknownFile e, int index, string partialPredicateCall
  ) {
    exists(int b, int bFile, int n |
      b = 0 and
      bFile = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfFile(e, i, _)) | i) and
      n = bFile and
      (
        none()
        or
        result = getImmediateChildOfFile(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfUnknownLocation(
    UnknownLocation e, int index, string partialPredicateCall
  ) {
    exists(int b, int bLocation, int n |
      b = 0 and
      bLocation = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfLocation(e, i, _)) | i) and
      n = bLocation and
      (
        none()
        or
        result = getImmediateChildOfLocation(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfArray(Array e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfAwait(Await e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfBecome(Become e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfBinaryOp(BinaryOp e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfBindPat(BindPat e, int index, string partialPredicateCall) {
    exists(int b, int bPat, int n |
      b = 0 and
      bPat = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfPat(e, i, _)) | i) and
      n = bPat and
      (
        none()
        or
        result = getImmediateChildOfPat(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfBlock(Block e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfBox(Box e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfBoxPat(BoxPat e, int index, string partialPredicateCall) {
    exists(int b, int bPat, int n |
      b = 0 and
      bPat = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfPat(e, i, _)) | i) and
      n = bPat and
      (
        none()
        or
        result = getImmediateChildOfPat(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfBreak(Break e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfCall(Call e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfCast(Cast e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfClosure(Closure e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfConst(Const e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfConstBlockPat(
    ConstBlockPat e, int index, string partialPredicateCall
  ) {
    exists(int b, int bPat, int n |
      b = 0 and
      bPat = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfPat(e, i, _)) | i) and
      n = bPat and
      (
        none()
        or
        result = getImmediateChildOfPat(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfContinue(Continue e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfExprStmt(ExprStmt e, int index, string partialPredicateCall) {
    exists(int b, int bStmt, int n |
      b = 0 and
      bStmt = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfStmt(e, i, _)) | i) and
      n = bStmt and
      (
        none()
        or
        result = getImmediateChildOfStmt(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfField(Field e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfFunction(Function e, int index, string partialPredicateCall) {
    exists(int b, int bDeclaration, int n |
      b = 0 and
      bDeclaration =
        b + 1 + max(int i | i = -1 or exists(getImmediateChildOfDeclaration(e, i, _)) | i) and
      n = bDeclaration and
      (
        none()
        or
        result = getImmediateChildOfDeclaration(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfIf(If e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfIfLet(IfLet e, int index, string partialPredicateCall) {
    exists(int b, int bStmt, int n |
      b = 0 and
      bStmt = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfStmt(e, i, _)) | i) and
      n = bStmt and
      (
        none()
        or
        result = getImmediateChildOfStmt(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfIndex(Index e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfInlineAsm(InlineAsm e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfItemStmt(ItemStmt e, int index, string partialPredicateCall) {
    exists(int b, int bStmt, int n |
      b = 0 and
      bStmt = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfStmt(e, i, _)) | i) and
      n = bStmt and
      (
        none()
        or
        result = getImmediateChildOfStmt(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfLet(Let e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfLitPat(LitPat e, int index, string partialPredicateCall) {
    exists(int b, int bPat, int n |
      b = 0 and
      bPat = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfPat(e, i, _)) | i) and
      n = bPat and
      (
        none()
        or
        result = getImmediateChildOfPat(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfLiteral(Literal e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfLoop(Loop e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfMatch(Match e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfMethodCall(MethodCall e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfMissingExpr(
    MissingExpr e, int index, string partialPredicateCall
  ) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfMissingPat(MissingPat e, int index, string partialPredicateCall) {
    exists(int b, int bPat, int n |
      b = 0 and
      bPat = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfPat(e, i, _)) | i) and
      n = bPat and
      (
        none()
        or
        result = getImmediateChildOfPat(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfModule(Module e, int index, string partialPredicateCall) {
    exists(int b, int bDeclaration, int n, int nDeclaration |
      b = 0 and
      bDeclaration =
        b + 1 + max(int i | i = -1 or exists(getImmediateChildOfDeclaration(e, i, _)) | i) and
      n = bDeclaration and
      nDeclaration = n + 1 + max(int i | i = -1 or exists(e.getDeclaration(i)) | i) and
      (
        none()
        or
        result = getImmediateChildOfDeclaration(e, index - b, partialPredicateCall)
        or
        result = e.getDeclaration(index - n) and
        partialPredicateCall = "Declaration(" + (index - n).toString() + ")"
      )
    )
  }

  private Element getImmediateChildOfOffsetOf(OffsetOf e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfOrPat(OrPat e, int index, string partialPredicateCall) {
    exists(int b, int bPat, int n |
      b = 0 and
      bPat = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfPat(e, i, _)) | i) and
      n = bPat and
      (
        none()
        or
        result = getImmediateChildOfPat(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfPath(Path e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfPathPat(PathPat e, int index, string partialPredicateCall) {
    exists(int b, int bPat, int n |
      b = 0 and
      bPat = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfPat(e, i, _)) | i) and
      n = bPat and
      (
        none()
        or
        result = getImmediateChildOfPat(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfRange(Range e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfRangePat(RangePat e, int index, string partialPredicateCall) {
    exists(int b, int bPat, int n |
      b = 0 and
      bPat = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfPat(e, i, _)) | i) and
      n = bPat and
      (
        none()
        or
        result = getImmediateChildOfPat(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfRecordLit(RecordLit e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfRecordPat(RecordPat e, int index, string partialPredicateCall) {
    exists(int b, int bPat, int n |
      b = 0 and
      bPat = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfPat(e, i, _)) | i) and
      n = bPat and
      (
        none()
        or
        result = getImmediateChildOfPat(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfRef(Ref e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfRefPat(RefPat e, int index, string partialPredicateCall) {
    exists(int b, int bPat, int n |
      b = 0 and
      bPat = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfPat(e, i, _)) | i) and
      n = bPat and
      (
        none()
        or
        result = getImmediateChildOfPat(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfReturn(Return e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfSlicePat(SlicePat e, int index, string partialPredicateCall) {
    exists(int b, int bPat, int n |
      b = 0 and
      bPat = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfPat(e, i, _)) | i) and
      n = bPat and
      (
        none()
        or
        result = getImmediateChildOfPat(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfTuple(Tuple e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfTuplePat(TuplePat e, int index, string partialPredicateCall) {
    exists(int b, int bPat, int n |
      b = 0 and
      bPat = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfPat(e, i, _)) | i) and
      n = bPat and
      (
        none()
        or
        result = getImmediateChildOfPat(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfTupleStructPat(
    TupleStructPat e, int index, string partialPredicateCall
  ) {
    exists(int b, int bPat, int n |
      b = 0 and
      bPat = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfPat(e, i, _)) | i) and
      n = bPat and
      (
        none()
        or
        result = getImmediateChildOfPat(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfUnaryExpr(UnaryExpr e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfUnderscore(Underscore e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfWildPat(WildPat e, int index, string partialPredicateCall) {
    exists(int b, int bPat, int n |
      b = 0 and
      bPat = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfPat(e, i, _)) | i) and
      n = bPat and
      (
        none()
        or
        result = getImmediateChildOfPat(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfYeet(Yeet e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfYield(Yield e, int index, string partialPredicateCall) {
    exists(int b, int bExpr, int n |
      b = 0 and
      bExpr = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfExpr(e, i, _)) | i) and
      n = bExpr and
      (
        none()
        or
        result = getImmediateChildOfExpr(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfAsync(Async e, int index, string partialPredicateCall) {
    exists(int b, int bBlock, int n |
      b = 0 and
      bBlock = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfBlock(e, i, _)) | i) and
      n = bBlock and
      (
        none()
        or
        result = getImmediateChildOfBlock(e, index - b, partialPredicateCall)
      )
    )
  }

  private Element getImmediateChildOfUnsafe(Unsafe e, int index, string partialPredicateCall) {
    exists(int b, int bBlock, int n |
      b = 0 and
      bBlock = b + 1 + max(int i | i = -1 or exists(getImmediateChildOfBlock(e, i, _)) | i) and
      n = bBlock and
      (
        none()
        or
        result = getImmediateChildOfBlock(e, index - b, partialPredicateCall)
      )
    )
  }

  cached
  Element getImmediateChild(Element e, int index, string partialAccessor) {
    // why does this look more complicated than it should?
    // * none() simplifies generation, as we can append `or ...` without a special case for the first item
    none()
    or
    result = getImmediateChildOfDbFile(e, index, partialAccessor)
    or
    result = getImmediateChildOfDbLocation(e, index, partialAccessor)
    or
    result = getImmediateChildOfMatchArm(e, index, partialAccessor)
    or
    result = getImmediateChildOfTypeRef(e, index, partialAccessor)
    or
    result = getImmediateChildOfUnknownFile(e, index, partialAccessor)
    or
    result = getImmediateChildOfUnknownLocation(e, index, partialAccessor)
    or
    result = getImmediateChildOfArray(e, index, partialAccessor)
    or
    result = getImmediateChildOfAwait(e, index, partialAccessor)
    or
    result = getImmediateChildOfBecome(e, index, partialAccessor)
    or
    result = getImmediateChildOfBinaryOp(e, index, partialAccessor)
    or
    result = getImmediateChildOfBindPat(e, index, partialAccessor)
    or
    result = getImmediateChildOfBox(e, index, partialAccessor)
    or
    result = getImmediateChildOfBoxPat(e, index, partialAccessor)
    or
    result = getImmediateChildOfBreak(e, index, partialAccessor)
    or
    result = getImmediateChildOfCall(e, index, partialAccessor)
    or
    result = getImmediateChildOfCast(e, index, partialAccessor)
    or
    result = getImmediateChildOfClosure(e, index, partialAccessor)
    or
    result = getImmediateChildOfConst(e, index, partialAccessor)
    or
    result = getImmediateChildOfConstBlockPat(e, index, partialAccessor)
    or
    result = getImmediateChildOfContinue(e, index, partialAccessor)
    or
    result = getImmediateChildOfExprStmt(e, index, partialAccessor)
    or
    result = getImmediateChildOfField(e, index, partialAccessor)
    or
    result = getImmediateChildOfFunction(e, index, partialAccessor)
    or
    result = getImmediateChildOfIf(e, index, partialAccessor)
    or
    result = getImmediateChildOfIfLet(e, index, partialAccessor)
    or
    result = getImmediateChildOfIndex(e, index, partialAccessor)
    or
    result = getImmediateChildOfInlineAsm(e, index, partialAccessor)
    or
    result = getImmediateChildOfItemStmt(e, index, partialAccessor)
    or
    result = getImmediateChildOfLet(e, index, partialAccessor)
    or
    result = getImmediateChildOfLitPat(e, index, partialAccessor)
    or
    result = getImmediateChildOfLiteral(e, index, partialAccessor)
    or
    result = getImmediateChildOfLoop(e, index, partialAccessor)
    or
    result = getImmediateChildOfMatch(e, index, partialAccessor)
    or
    result = getImmediateChildOfMethodCall(e, index, partialAccessor)
    or
    result = getImmediateChildOfMissingExpr(e, index, partialAccessor)
    or
    result = getImmediateChildOfMissingPat(e, index, partialAccessor)
    or
    result = getImmediateChildOfModule(e, index, partialAccessor)
    or
    result = getImmediateChildOfOffsetOf(e, index, partialAccessor)
    or
    result = getImmediateChildOfOrPat(e, index, partialAccessor)
    or
    result = getImmediateChildOfPath(e, index, partialAccessor)
    or
    result = getImmediateChildOfPathPat(e, index, partialAccessor)
    or
    result = getImmediateChildOfRange(e, index, partialAccessor)
    or
    result = getImmediateChildOfRangePat(e, index, partialAccessor)
    or
    result = getImmediateChildOfRecordLit(e, index, partialAccessor)
    or
    result = getImmediateChildOfRecordPat(e, index, partialAccessor)
    or
    result = getImmediateChildOfRef(e, index, partialAccessor)
    or
    result = getImmediateChildOfRefPat(e, index, partialAccessor)
    or
    result = getImmediateChildOfReturn(e, index, partialAccessor)
    or
    result = getImmediateChildOfSlicePat(e, index, partialAccessor)
    or
    result = getImmediateChildOfTuple(e, index, partialAccessor)
    or
    result = getImmediateChildOfTuplePat(e, index, partialAccessor)
    or
    result = getImmediateChildOfTupleStructPat(e, index, partialAccessor)
    or
    result = getImmediateChildOfUnaryExpr(e, index, partialAccessor)
    or
    result = getImmediateChildOfUnderscore(e, index, partialAccessor)
    or
    result = getImmediateChildOfWildPat(e, index, partialAccessor)
    or
    result = getImmediateChildOfYeet(e, index, partialAccessor)
    or
    result = getImmediateChildOfYield(e, index, partialAccessor)
    or
    result = getImmediateChildOfAsync(e, index, partialAccessor)
    or
    result = getImmediateChildOfUnsafe(e, index, partialAccessor)
  }
}

/**
 * Gets the "immediate" parent of `e`. "Immediate" means not taking into account node resolution: for example
 * if `e` has conversions, `getImmediateParent(e)` will give the innermost conversion in the hidden AST.
 */
Element getImmediateParent(Element e) {
  // `unique` is used here to tell the optimizer that there is in fact only one result
  // this is tested by the `library-tests/parent/no_double_parents.ql` test
  result = unique(Element x | e = Impl::getImmediateChild(x, _, _) | x)
}

/**
 * Gets the immediate child indexed at `index`. Indexes are not guaranteed to be contiguous, but are guaranteed to be distinct. `accessor` is bound the member predicate call resulting in the given child.
 */
Element getImmediateChildAndAccessor(Element e, int index, string accessor) {
  exists(string partialAccessor |
    result = Impl::getImmediateChild(e, index, partialAccessor) and
    accessor = "get" + partialAccessor
  )
}

/**
 * Gets the child indexed at `index`. Indexes are not guaranteed to be contiguous, but are guaranteed to be distinct. `accessor` is bound the member predicate call resulting in the given child.
 */
Element getChildAndAccessor(Element e, int index, string accessor) {
  exists(string partialAccessor |
    result = Impl::getImmediateChild(e, index, partialAccessor).resolve() and
    accessor = "get" + partialAccessor
  )
}
