// generated by codegen
/**
 * This module provides the generated definition of `UnaryExpr`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.generated.Synth
private import codeql.rust.generated.Raw
import codeql.rust.elements.Expr

/**
 * INTERNAL: This module contains the fully generated definition of `UnaryExpr` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::UnaryExpr` class directly.
   * Use the subclass `UnaryExpr`, where the following predicates are available.
   */
  class UnaryExpr extends Synth::TUnaryExpr, Expr {
    override string getAPrimaryQlClass() { result = "UnaryExpr" }

    /**
     * Gets the expression of this unary expression.
     */
    Expr getExpr() {
      result =
        Synth::convertExprFromRaw(Synth::convertUnaryExprToRaw(this).(Raw::UnaryExpr).getExpr())
    }

    /**
     * Gets the op of this unary expression.
     */
    string getOp() { result = Synth::convertUnaryExprToRaw(this).(Raw::UnaryExpr).getOp() }
  }
}
