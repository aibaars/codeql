// generated by codegen
/**
 * This module provides the generated definition of `Index`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.generated.Synth
private import codeql.rust.generated.Raw
import codeql.rust.elements.Expr

/**
 * INTERNAL: This module contains the fully generated definition of `Index` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::Index` class directly.
   * Use the subclass `Index`, where the following predicates are available.
   */
  class Index extends Synth::TIndex, Expr {
    override string getAPrimaryQlClass() { result = "Index" }

    /**
     * Gets the base of this index.
     */
    Expr getBase() {
      result = Synth::convertExprFromRaw(Synth::convertIndexToRaw(this).(Raw::Index).getBase())
    }

    /**
     * Gets the index of this index.
     */
    Expr getIndex() {
      result = Synth::convertExprFromRaw(Synth::convertIndexToRaw(this).(Raw::Index).getIndex())
    }

    /**
     * Holds if this index is assignee expression.
     */
    predicate isAssigneeExpr() { Synth::convertIndexToRaw(this).(Raw::Index).isAssigneeExpr() }
  }
}
